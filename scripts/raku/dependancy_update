#!/usr/bin/env raku

use v6.d;
use Config::TOML;

sub MAIN($filename) {

  # my $file-content = slurp $filename;
  # my %toml = from-toml($file-content);

  my $toml = slurp $filename.from-toml($file-content);

  if %toml<dependencies>:exists {
    for %toml<dependencies>.kv -> $lib, $version {

      my $output = qqx/cargo search $lib/;
      my $new-version = $output.lines[0].split(' ')[2].trans('"' => '').subst(':', '');

      if $new-version.defined and ($version.isa(Hash) ?? $version<version> !! $version) ne $new-version {
        say "Updating $lib: $version -> $new-version";
        if $version.isa(Hash) {
          %toml<dependencies>{$lib}<version> = $new-version;
        } else {
          %toml<dependencies>{$lib} = $new-version; 
        }
      } else {
        say "Latest version for $lib not found or already up to date.";
      }
    }
    my $new-toml-content = to-toml(%toml);
    spurt $filename, $new-toml-content;
  } else {
    say "'dependencies' section not found in $filename"; 
  }
}


# use v6.d;
# use Config::TOML;
#
# sub get-latest-version(Str $library) {
#     my $output = qqx/cargo search $library/;
#     my $new-ver = $output.lines[0].split(' ')[2].trans('"'=>'').subst(':', '');
#     return $new-ver;
# }
#
# sub MAIN($filename) {
#
#     my $file-content = slurp $filename;
#     my %toml = from-toml($file-content);
#
#     if %toml<dependencies>:exists {
#         for %toml<dependencies>.kv -> $lib, $version {
#             my $new-version = get-latest-version($lib);
#             if $new-version.defined and ($version.isa(Hash) ?? $version<version> !! $version) ne $new-version {
#                 say "Updating $lib: $version -> $new-version";
#                 if $version.isa(Hash) {
#                     %toml<dependencies>{$lib}<version> = $new-version; # Correct syntax for nested hash update
#                 } else {
#                     %toml<dependencies>{$lib} = $new-version; # Correct syntax for direct value update
#                 }
#             } else {
#                 say "Latest version for $lib not found or already up to date.";
#             }
#         }
#
#         my $new-toml-content = to-toml(%toml);
#         spurt $filename, $new-toml-content;
#     } else {
#         say "'dependencies' section not found in $filename";
#     }
# }
#
