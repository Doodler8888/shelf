#!/usr/bin/env raku

use v6.e.PREVIEW;

#| Modify and move file
multi sub MAIN($filename) {
  ($filename ~~ / \.bak$ /) 
    ?? move($filename, $filename.subst(/\.bak$/, '')) 
    !! move($filename, "$filename.bak");
}

#| Modify and copy file
multi sub MAIN($filename, Bool :c(:$copy)!) {
  ($filename ~~ / \.bak$ /) 
    ?? copy($filename, $filename.subst(/\.bak$/, '')) 
    !! copy($filename, "$filename.bak");
}

# In raku flags are optional(?) by default, so in this scenario, in order for
# for the compiler to understand the order of execution if the flag is absent, i
# need to add (!). It guarantees that the sabroutine with the '-c' flag gets
# executed only if i provided the flag.

# Raku provides some hooks to override CLI behavior, like if you define the
# ARGS-TO-CAPTURE function you can preprocess arguments before dispatching to
# MAIN.

# You can define the special hash %*SUB-MAIN-OPTS to configure how the arguments
# are parsed. F.ex if you add the :bundling key, then it will accept -abc in
# addition to -a -b -c.
